#!/bin/bash
set -eo pipefail

# ensure we're working in the workspace folder
if [ -n "$WORKSPACE_FOLDER" ]; then
  cd $WORKSPACE_FOLDER
else
  echo "No WORKSPACE_FOLDER environment variable set, please update your devcontainer.json file."
  # as a transitional fallback, check to see if composer.json exists in the current directory, in which case we assume we're in the workspace folder
  if [ ! -f composer.json ]; then
    echo "No composer.json found in the current directory, please run this script from the root of your project."
    exit 1
  fi
fi

# re-run composer install (e.g. in case we've switched branches since last time we ran this script)
composer install

# re-build the theme (likewise in case of changes)
composer compile-theme

# download pantheon backups
export TERMINUS_ENV="dev"
FILES_BACKUP=$(mktemp --dry-run files-XXXXXX.tar.gz)
DATABASE_BACKUP=$(mktemp --dry-run database-XXXXXX.sql.gz)
terminus backup:get --element=files --to=$FILES_BACKUP
terminus backup:get --element=db --to=$DATABASE_BACKUP

rm -rf web/sites/default/files
mkdir web/sites/default/files
chgrp www-data web/sites/default/files
chmod 2775 web/sites/default/files
tar zx --no-same-permissions --strip-components 1 -C web/sites/default/files -f $FILES_BACKUP
# no-same-permissions doesn't seem to work so we fix it here
sudo find web/sites/default/files -type d -exec chmod g+ws {} +
sudo find web/sites/default/files -type f -exec chmod g+w {} +

build/db-rebuild.sh $DATABASE_BACKUP

rm $FILES_BACKUP
rm $DATABASE_BACKUP